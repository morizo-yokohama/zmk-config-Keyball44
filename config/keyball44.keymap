#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LClick {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        RClick {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <2 1>;
        };

        BTControl {
            bindings = <&mo 6>;
            key-positions = <38 42>;
        };

        LRClick {
            bindings = <&mkp LCLK>;
            key-positions = <16 15>;
        };

        LLClick {
            bindings = <&mkp RCLK>;
            key-positions = <15 14>;
        };

        LMClick {
            bindings = <&mkp MCLK>;
            key-positions = <16 15 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE        &kp Q     &kp W           &kp E      &kp R      &kp T                        &kp Y        &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp LEFT_CONTROL  &kp A     &kp S           &kp D      &kp F      &kp G                        &kp H        &kp J  &kp K      &kp L    &kp MINUS  &kp SQT
&kp LEFT_SHIFT    &kp Z     &kp X           &kp C      &kp V      &kp B                        &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp AT
&kp LGUI          &kp LALT  &kp LANGUAGE_1  &kp SPACE  &lt 3 TAB             &lt 1 LANGUAGE_2  &lt 2 ENTER                                        &kp DELETE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp PERIOD
&none         &kp COMMA     &kp PERIOD    &none         &none         &none                     &none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none         &none
&none         &none         &none         &none         &none         &none                     &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &none
&trans        &trans        &trans        &trans        &trans                          &trans  &trans                                                                &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT              &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&none   &none            &none        &none     &none       &trans                   &kp MINUS       &kp LS(APOS)   &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &none
&none   &trans           &trans       &trans    &trans      &trans                   &kp UNDERSCORE  &kp LS(SEMI)   &kp LESS_THAN     &kp GREATER_THAN      &none                  &none
&trans  &trans           &trans       &trans    &trans                       &trans  &trans                                                                                        &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none     &none     &none   &none      &none          &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp PAGE_UP    &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &none     &none     &none   &none      &kp PAGE_DOWN  &none
&trans  &trans  &trans   &trans   &trans              &trans  &mo 3                                                 &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3        &kp N4     &kp N5              &kp N6         &kp N7     &kp N8  &kp N9     &kp N0     &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none               &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK  &none
&none   &none           &none           &none         &none      &none               &kp PAGE_DOWN  &none      &none   &none      &none      &none
&trans  &trans          &trans          &trans        &trans                 &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                                                &bt BT_CLR_ALL
            >;
        };
    };
};
